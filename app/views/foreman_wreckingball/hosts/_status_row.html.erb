<div class="list-group-item list-view-pf-stacked list-view-pf-top-align">
  <div class="list-group-item-header">
    <div class="list-view-pf-expand">
      <span class="fa fa-angle-right"></span>
    </div>
    <div class="list-view-pf-actions">
      <% if User.current.allowed_to?(hash_for_refresh_status_dashboard_hosts_path) %>
        <div class="dropdown pull-right dropdown-kebab-pf">
          <button class="btn btn-link dropdown-toggle" type="button" id="dropdownKebabRight<%= id %>" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            <span class="fa fa-ellipsis-v"></span>
          </button>
          <ul class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownKebabRight<%= id %>">
            <li><%= display_link_if_authorized(_('Refresh'), hash_for_refresh_status_dashboard_hosts_path, :title => _('Refresh data'), :method => :put) %></li>
          </ul>
        </div>
      <% end %>
    </div>
    <div class="list-view-pf-main-info">
      <div class="list-view-pf-left">
        <span class="pficon list-view-pf-icon-md <%= classes_for_vmware_status_row(counter) %>"></span>
      </div>
      <div class="list-view-pf-body">
        <div class="list-view-pf-description">
          <div class="list-group-item-heading">
            <%= _(name) %>
          </div>
          <div class="list-group-item-text">
            <%= _(description) %>
          </div>
        </div>
        <div class="list-view-pf-additional-info">
          <div class="list-view-pf-additional-info-item">
            <%= icon_text('ok', '', :kind => 'pficon') %>
            <strong><%= counter[:ok] %></strong>
            <%= _('OK') %>
          </div>
          <div class="list-view-pf-additional-info-item">
            <%= icon_text('warning-triangle-o', '', :kind => 'pficon') %>
            <strong><%= counter[:warning] %></strong>
            <%= _('Warning') %>
          </div>
          <div class="list-view-pf-additional-info-item">
            <%= icon_text('error-circle-o', '', :kind => 'pficon') %>
            <strong><%= counter[:critical] %></strong>
            <%= _('Critical') %>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="list-group-item-container container-fluid hidden">
    <div class="close">
      <span class="pficon pficon-close"></span>
    </div>
    <div class="row">
      <div class="col-md-12">
        <% if counter[:warning] > 0 || counter[:critical] > 0 %>
          <p><%= _('The following host require manual attention:') %></p>
          <table class="table table-striped table-fixed">
            <thead>
              <tr>
                <th><%= _('Hostname') %></th>
                <th><%= _('Status') %></th>
                <th><%= _('Owner') %></th>
                <th><%= _('Puppet Environment') %></th>
                <% if supports_remediate %>
                  <th><%= _('Actions') %></th>
                <% end %>
              </tr>
            </thead>
            <tbody>
              <% hosts.each do |host| %>
                <% next if host.public_send(status).to_global == HostStatus::Global::OK %>
                <tr>
                  <td class="ellipsis"><%= link_to_if_authorized(host.name, hash_for_host_path(:id => host)) %></td>
                  <td>
                    <span class="<%= host_global_status_icon_class(host.public_send(status).to_global) %>"></span>
                    <span class="<%= host_global_status_class(host.public_send(status).to_global) %>"><%= _(host.public_send(status).to_label) %></span>
                  </td>
                  <td class="ellipsis"><%= host.owner %></td>
                  <td class="ellipsis"><%= host.environment %></td>
                  <% if supports_remediate %>
                    <td>
                      <%=
                        action_buttons(
                          display_link_if_authorized(
                            _('Remediate'),
                            hash_for_schedule_remediate_host_path(:id => host, :status_id => host.public_send(status).id).merge(:auth_object => host, :permission => 'remediate_vmware_status_hosts'),
                            :data => { :title => _('Remediate Host OS'), :submit_class => 'btn-danger' },
                            :onclick => 'show_modal(this); return false;'
                          )
                        )
                      %>
                  </td>
                <% end %>
                </tr>
              <% end %>
            </tbody>
          </table>
        <% else %>
          <p><%= _('No manual actions required.') %></p>
        <% end %>
      </div>
    </div>
  </div>
</div>
