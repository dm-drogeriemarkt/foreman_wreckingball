name: CI
on: [push, pull_request]
env:
  RAILS_ENV: test
  DATABASE_URL: postgresql://postgres:@localhost/test
  DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL: true
jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
      - name: Setup
        run: |
          gem install bundler
          bundle install --jobs=3 --retry=3
      - name: Run rubocop
        run: bundle exec rubocop
  test:
    runs-on: ubuntu-latest
    needs: rubocop
    services:
      postgres:
        image: postgres:12.1
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        foreman-core-branch: [2.3-stable, 2.4-stable, 2.5-stable, 3.0-stable, develop]
        foreman-tasks-version: [3.0.6, 4.1.5, 5.1.0]
        foreman-puppet-version: [null, 1.0.3, 2.0.0.alpha.2]
        ruby-version: [2.7]
        node-version: [10]
        exclude:
          - foreman-core-branch: 2.3-stable
            foreman-puppet-version: 1.0.3
          - foreman-core-branch: 2.3-stable
            foreman-puppet-version: 2.0.0.alpha.2
          - foreman-core-branch: 2.3-stable
            foreman-tasks-version: 4.1.5
          - foreman-core-branch: 2.3-stable
            foreman-tasks-version: 5.1.0
          - foreman-core-branch: 2.4-stable
            foreman-puppet-version: 1.0.3
          - foreman-core-branch: 2.4-stable
            foreman-puppet-version: 2.0.0.alpha.2
          - foreman-core-branch: 2.4-stable
            foreman-tasks-version: 5.1.0
          - foreman-core-branch: 2.5-stable
            foreman-puppet-version: 2.0.0.alpha.2
          - foreman-core-branch: 2.5-stable
            foreman-tasks-version: 5.1.0
          - foreman-core-branch: 3.0-stable
            foreman-puppet-version: null
          - foreman-core-branch: develop
            foreman-puppet-version: 1.0.3
          - foreman-core-branch: develop
            foreman-puppet-version: null
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libcurl4-openssl-dev libvirt-dev ruby-libvirt zlib1g-dev libpq-dev
      - uses: actions/checkout@v2
        with:
          repository: theforeman/foreman
          ref: ${{ matrix.foreman-core-branch }}
          path: foreman
      - uses: actions/checkout@v2
        with:
          path: foreman_wreckingball
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version:  ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('foreman/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Add foreman_puppet
        working-directory: foreman
        run: echo "gem 'foreman_puppet', '~> ${{ matrix.foreman-puppet-version }}'" > bundler.d/foreman_puppet.local.rb
        if: ${{ matrix.foreman-puppet-version != null }}
      - name: Add foreman-tasks
        working-directory: foreman
        run: echo "gem 'foreman-tasks', '~> ${{ matrix.foreman-tasks-version }}'" > bundler.d/foreman-tasks.local.rb
      - name: Add smart_proxy_dynflow
        working-directory: foreman
        run: |
          echo 'gem "smart_proxy_dynflow", "~> 0.3.0", require: false' > bundler.d/smart_proxy_dynflow.local.rb
        if: ${{ matrix.foreman-tasks-version != '5.1.0' }}
      - name: Setup Bundler
        working-directory: foreman
        run: |
          echo "gem 'foreman_wreckingball', path: '../foreman_wreckingball'" > bundler.d/foreman_wreckingball.local.rb
          gem install bundler
          bundle config path vendor/bundle
          bundle config set without journald development console mysql2 sqlite
          bundle lock --update
      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: foreman/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('foreman/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Setup Plugin
        working-directory: foreman
        run: |
          bundle install --jobs=3 --retry=3
          bundle exec rake db:create
          bundle exec rake db:migrate
          npm install
          bundle exec rake webpack:compile
      - name: Run plugin tests
        working-directory: foreman
        run: bundle exec rake test:foreman_wreckingball
      - name: Run permissions tests
        working-directory: foreman
        run: bundle exec rake test TEST="test/unit/foreman/access_permissions_test.rb"
        if: ${{ matrix.foreman-puppet-version != '1.0.3' || matrix.foreman-core-branch != '2.5-stable' }}
      - name: Precompile plugin assets
        working-directory: foreman
        run: bundle exec rake 'plugin:assets:precompile[foreman_wreckingball]'
        env:
          RAILS_ENV: production
